#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(set = 0, binding = 4, rgba8_snorm) uniform restrict image2D uMyImage;

const float contrast = 1.1; 
const float gamma = 1.2;

/*vec4 modifyColorContrast(vec4 color, float contrast) { return vec4(mix(vec3(0.5), color.rgb, contrast), color.a);}
vec4 modifyColorGamma(vec4 color, float gamma) { return vec4(pow(color.rgb, vec3(gamma)), color.a);}*/

void main()
{
    ivec2 coords = ivec2(gl_GlobalInvocationID.xy); // e.g., ivec2(1920, 1080)
    vec4 colorIn = imageLoad(uMyImage, coords).rgba;

    // Increase contrast
    vec4 color = (colorIn - 0.5) * contrast + 0.5;
    // Apply gamma correction
    color.rgb = pow(color.rgb, vec3(1.0 / gamma));

    vec4 colorOut = color;
    imageStore(uMyImage, coords, colorOut);
}